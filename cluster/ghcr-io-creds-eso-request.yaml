# LINK: https://external-secrets.io/latest/api/externalsecret/
#
# this requires that the json docker auth file is uploaded
# to azure key-vault, as a secret, named "GHCR-IO-CREDS"
# e.g. {"auths":{"ghcr.io":{"auth":"blaskdksdalkjdl"}}}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ghcr-io-external-secret
  namespace: external-secrets
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: eso-azure-secret-store
  # target = describes the secret that shall be created
  target: # is the kind: Secret to be created using the values fetched from our Cloud Secret Store
    name: regcred-ghcr-io-secret # secret name to be created (default is metadata.name)
    # creationPolicy: Owner # opts: Owner | Merge | None
    # deletionPolicy: Retain # opts: Delete | Merge | Retain = what to do with this if the provider secret gets deleted.
    template:
      engineVersion: v2
      type: "kubernetes.io/dockerconfigjson"
      # optional:
      metadata:
        annotations:
          created-with: external-secret-operator
          replicated-with: cluster-secret-tool
      # Use inline templates to construct your desired config file that contains your secret
      data:
        .dockerconfigjson: "{{ .totemplate }}"
        #  {{ .totemplate | b64enc }} NOT required. It is already converted to b64
  # from where to fetch data...
  data: # when I know the secret key name to ref
    - secretKey: totemplate
      remoteRef: # key inside cloud secret store, to read from
        key: GHCR-IO-CREDS
