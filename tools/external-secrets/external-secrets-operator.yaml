---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets-op-tool
  namespace: argocd
  labels:
    group: tools
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  project: tools
  # desired state at Git
  source:
    repoURL: https://charts.external-secrets.io
    chart: external-secrets
    targetRevision: 0.9.8
    helm:
      releaseName: external-secrets
      valuesOject: []
  # target cluster / NS
  destination:
    server: https://kubernetes.default.svc
    namespace: external-secrets
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      # prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      # allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      # - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
      # - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      # - PruneLast=true
#
# ########################################################### #
# Next: we need to have a Secret in our cluster with,
#       cloud provider credentials
#       e.g. create one Azure SP that can read from KeyVaul
# ---------------------------------------------
# apiVersion: v1
# kind: Secret
# metadata:
#   name: azure-credentials-short
# data:
#   # set user "azure-cli-2023-08-14-09-52-46" read role in azure key vault
#   # this user MUST have role "Azure Key Vault Secrets User" assigned. ATTENTION: NOT "Azure Key Vault Secrets Reader"
#   clientId: YOUR_SP_APP_ID
#   clientSecret: YOUR_SP_APP_PASSWORD
#   tenantId: SOS
# ########################################################### #
#
